# Định nghĩa các loại (types) dữ liệu
type Product {
    id: ID!
    title: String!
    quantity: Int!
    desc: String
    price: Float!
    user: User! # Product thuộc về một User
}

type User {
    id: ID!
    fullname: String!
    email: String!
    password: String!
    phone: String
    products: [Product!] # User có nhiều Product
    categories: [Category!] # User thuộc về nhiều Category
}

type Category {
    id: ID!
    name: String!
    images: String
    users: [User!] # Category có nhiều User (qua bảng UserCategory)
}

# Định nghĩa các Input types cho Mutations
# Sử dụng Input types để truyền dữ liệu khi tạo/cập nhật đối tượng
input ProductInput {
    title: String!
    quantity: Int!
    desc: String
    price: Float!
    userId: ID! # ID của User tạo Product này
}

input UserInput {
    fullname: String!
    email: String!
    password: String!
    phone: String
    categoryIds: [ID!] # Danh sách ID của Category mà User này quan tâm
}

input CategoryInput {
    name: String!
    images: String
}

# Định nghĩa các truy vấn (Queries)
type Query {
    # Product Queries
    allProducts(sortByPrice: String = "asc"): [Product!]! # Hiển thị tất cả product, sắp xếp theo giá
    productById(id: ID!): Product
    productsByCategoryId(categoryId: ID!): [Product!]! # Lấy tất cả product của một category
    productsByUserId(userId: ID!): [Product!]! # Lấy tất cả product của một user

    # User Queries
    allUsers: [User!]!
    userById(id: ID!): User

    # Category Queries
    allCategories: [Category!]!
    categoryById(id: ID!): Category
}

# Định nghĩa các thay đổi (Mutations)
type Mutation {
    # Product Mutations
    createProduct(product: ProductInput!): Product!
    updateProduct(id: ID!, product: ProductInput!): Product
    deleteProduct(id: ID!): Boolean!

    # User Mutations
    createUser(user: UserInput!): User!
    updateUser(id: ID!, user: UserInput!): User
    deleteUser(id: ID!): Boolean!
    
    # Category Mutations
    createCategory(category: CategoryInput!): Category!
    updateCategory(id: ID!, category: CategoryInput!): Category
    deleteCategory(id: ID!): Boolean!
}